// This file was automatically generated by makeqstrdata.py

QDEF(MP_QSTR_NULL, (const byte*)"\x00\x00" "")
QDEF(MP_QSTR_, (const byte*)"\x05\x00" "")
QDEF(MP_QSTR___dir__, (const byte*)"\x7a\x07" "__dir__")
QDEF(MP_QSTR___abs__, (const byte*)"\x95\x07" "__abs__")
QDEF(MP_QSTR___add__, (const byte*)"\xc4\x07" "__add__")
QDEF(MP_QSTR___and__, (const byte*)"\x0e\x07" "__and__")
QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x08" "__bool__")
QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x0f" "__build_class__")
QDEF(MP_QSTR___call__, (const byte*)"\xa7\x08" "__call__")
QDEF(MP_QSTR___class__, (const byte*)"\x2b\x09" "__class__")
QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x0c" "__contains__")
QDEF(MP_QSTR___del__, (const byte*)"\x68\x07" "__del__")
QDEF(MP_QSTR___delete__, (const byte*)"\xdc\x0a" "__delete__")
QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x0b" "__delitem__")
QDEF(MP_QSTR___dict__, (const byte*)"\x7f\x08" "__dict__")
QDEF(MP_QSTR___divmod__, (const byte*)"\x78\x0a" "__divmod__")
QDEF(MP_QSTR___enter__, (const byte*)"\x6d\x09" "__enter__")
QDEF(MP_QSTR___eq__, (const byte*)"\x71\x06" "__eq__")
QDEF(MP_QSTR___exit__, (const byte*)"\x45\x08" "__exit__")
QDEF(MP_QSTR___file__, (const byte*)"\x03\x08" "__file__")
QDEF(MP_QSTR___floordiv__, (const byte*)"\x46\x0c" "__floordiv__")
QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x06" "__ge__")
QDEF(MP_QSTR___get__, (const byte*)"\xb3\x07" "__get__")
QDEF(MP_QSTR___getattr__, (const byte*)"\x40\x0b" "__getattr__")
QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x0b" "__getitem__")
QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x06" "__gt__")
QDEF(MP_QSTR___hash__, (const byte*)"\xf7\x08" "__hash__")
QDEF(MP_QSTR___iadd__, (const byte*)"\x6d\x08" "__iadd__")
QDEF(MP_QSTR___import__, (const byte*)"\x38\x0a" "__import__")
QDEF(MP_QSTR___init__, (const byte*)"\x5f\x08" "__init__")
QDEF(MP_QSTR___invert__, (const byte*)"\xf7\x0a" "__invert__")
QDEF(MP_QSTR___isub__, (const byte*)"\x08\x08" "__isub__")
QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x08" "__iter__")
QDEF(MP_QSTR___le__, (const byte*)"\xcc\x06" "__le__")
QDEF(MP_QSTR___len__, (const byte*)"\xe2\x07" "__len__")
QDEF(MP_QSTR___lshift__, (const byte*)"\x09\x0a" "__lshift__")
QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x06" "__lt__")
QDEF(MP_QSTR___main__, (const byte*)"\x8e\x08" "__main__")
QDEF(MP_QSTR___mod__, (const byte*)"\x63\x07" "__mod__")
QDEF(MP_QSTR___module__, (const byte*)"\xff\x0a" "__module__")
QDEF(MP_QSTR___mul__, (const byte*)"\x31\x07" "__mul__")
QDEF(MP_QSTR___name__, (const byte*)"\xe2\x08" "__name__")
QDEF(MP_QSTR___neg__, (const byte*)"\x69\x07" "__neg__")
QDEF(MP_QSTR___new__, (const byte*)"\x79\x07" "__new__")
QDEF(MP_QSTR___next__, (const byte*)"\x02\x08" "__next__")
QDEF(MP_QSTR___or__, (const byte*)"\x38\x06" "__or__")
QDEF(MP_QSTR___path__, (const byte*)"\xc8\x08" "__path__")
QDEF(MP_QSTR___pos__, (const byte*)"\x29\x07" "__pos__")
QDEF(MP_QSTR___pow__, (const byte*)"\x2d\x07" "__pow__")
QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x0c" "__qualname__")
QDEF(MP_QSTR___repl_print__, (const byte*)"\x01\x0e" "__repl_print__")
QDEF(MP_QSTR___repr__, (const byte*)"\x10\x08" "__repr__")
QDEF(MP_QSTR___reversed__, (const byte*)"\x61\x0c" "__reversed__")
QDEF(MP_QSTR___rshift__, (const byte*)"\x57\x0a" "__rshift__")
QDEF(MP_QSTR___set__, (const byte*)"\xa7\x07" "__set__")
QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x0b" "__setitem__")
QDEF(MP_QSTR___str__, (const byte*)"\xd0\x07" "__str__")
QDEF(MP_QSTR___sub__, (const byte*)"\x21\x07" "__sub__")
QDEF(MP_QSTR___traceback__, (const byte*)"\x4f\x0d" "__traceback__")
QDEF(MP_QSTR___truediv__, (const byte*)"\x88\x0b" "__truediv__")
QDEF(MP_QSTR___xor__, (const byte*)"\x20\x07" "__xor__")
QDEF(MP_QSTR__star_, (const byte*)"\x8f\x01" "*")
QDEF(MP_QSTR__, (const byte*)"\xfa\x01" "_")
QDEF(MP_QSTR__slash_, (const byte*)"\x8a\x01" "/")
QDEF(MP_QSTR__brace_open__colon__hash_o_brace_close_, (const byte*)"\xf5\x05" "{:#o}")
QDEF(MP_QSTR__brace_open__colon__hash_x_brace_close_, (const byte*)"\x02\x05" "{:#x}")
QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x05" "{:#b}")
QDEF(MP_QSTR__space_, (const byte*)"\x85\x01" " ")
QDEF(MP_QSTR__0x0a_, (const byte*)"\xaf\x01" "\x0a")
QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x20" "maximum recursion depth exceeded")
QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x08" "<module>")
QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x08" "<lambda>")
QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x0a" "<listcomp>")
QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x0a" "<dictcomp>")
QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x09" "<setcomp>")
QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x09" "<genexpr>")
QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x08" "<string>")
QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x07" "<stdin>")
QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x05" "utf-8")
QDEF(MP_QSTR_AF_INET, (const byte*)"\xeb\x07" "AF_INET")
QDEF(MP_QSTR_AF_INET6, (const byte*)"\x7d\x08" "AF_INET6")
QDEF(MP_QSTR_ARRAY, (const byte*)"\x5c\x05" "ARRAY")
QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x0f" "ArithmeticError")
QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x0e" "AssertionError")
QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\x0e" "AttributeError")
QDEF(MP_QSTR_BFINT16, (const byte*)"\x95\x07" "BFINT16")
QDEF(MP_QSTR_BFINT32, (const byte*)"\x53\x07" "BFINT32")
QDEF(MP_QSTR_BFINT8, (const byte*)"\x4a\x06" "BFINT8")
QDEF(MP_QSTR_BFUINT16, (const byte*)"\x40\x08" "BFUINT16")
QDEF(MP_QSTR_BFUINT32, (const byte*)"\x06\x08" "BFUINT32")
QDEF(MP_QSTR_BFUINT8, (const byte*)"\xbf\x07" "BFUINT8")
QDEF(MP_QSTR_BF_LEN, (const byte*)"\x19\x06" "BF_LEN")
QDEF(MP_QSTR_BF_POS, (const byte*)"\x52\x06" "BF_POS")
QDEF(MP_QSTR_BIG_ENDIAN, (const byte*)"\xff\x0a" "BIG_ENDIAN")
QDEF(MP_QSTR_BLACK, (const byte*)"\x82\x05" "BLACK")
QDEF(MP_QSTR_BLUE, (const byte*)"\x3b\x04" "BLUE")
QDEF(MP_QSTR_BRED, (const byte*)"\x34\x04" "BRED")
QDEF(MP_QSTR_BROWN, (const byte*)"\xc3\x05" "BROWN")
QDEF(MP_QSTR_BRRED, (const byte*)"\x06\x05" "BRRED")
QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x0d" "BaseException")
QDEF(MP_QSTR_BufferedWriter, (const byte*)"\xeb\x0e" "BufferedWriter")
QDEF(MP_QSTR_BytesIO, (const byte*)"\x1a\x07" "BytesIO")
QDEF(MP_QSTR_CHANEEL0, (const byte*)"\x9d\x08" "CHANEEL0")
QDEF(MP_QSTR_CHANEEL1, (const byte*)"\x9c\x08" "CHANEEL1")
QDEF(MP_QSTR_CHANEEL2, (const byte*)"\x9f\x08" "CHANEEL2")
QDEF(MP_QSTR_CHANEEL3, (const byte*)"\x9e\x08" "CHANEEL3")
QDEF(MP_QSTR_CHANNEL0, (const byte*)"\x76\x08" "CHANNEL0")
QDEF(MP_QSTR_CHANNEL1, (const byte*)"\x77\x08" "CHANNEL1")
QDEF(MP_QSTR_CHANNEL2, (const byte*)"\x74\x08" "CHANNEL2")
QDEF(MP_QSTR_CHANNEL3, (const byte*)"\x75\x08" "CHANNEL3")
QDEF(MP_QSTR_CLK_I2C1, (const byte*)"\x17\x08" "CLK_I2C1")
QDEF(MP_QSTR_CLK_I2C2, (const byte*)"\x14\x08" "CLK_I2C2")
QDEF(MP_QSTR_CLK_SPI1, (const byte*)"\x25\x08" "CLK_SPI1")
QDEF(MP_QSTR_CLK_SPI2, (const byte*)"\x26\x08" "CLK_SPI2")
QDEF(MP_QSTR_CMOS_D0, (const byte*)"\x1c\x07" "CMOS_D0")
QDEF(MP_QSTR_CMOS_D1, (const byte*)"\x1d\x07" "CMOS_D1")
QDEF(MP_QSTR_CMOS_D2, (const byte*)"\x1e\x07" "CMOS_D2")
QDEF(MP_QSTR_CMOS_D3, (const byte*)"\x1f\x07" "CMOS_D3")
QDEF(MP_QSTR_CMOS_D4, (const byte*)"\x18\x07" "CMOS_D4")
QDEF(MP_QSTR_CMOS_D5, (const byte*)"\x19\x07" "CMOS_D5")
QDEF(MP_QSTR_CMOS_D6, (const byte*)"\x1a\x07" "CMOS_D6")
QDEF(MP_QSTR_CMOS_D7, (const byte*)"\x1b\x07" "CMOS_D7")
QDEF(MP_QSTR_CMOS_HREF, (const byte*)"\x11\x09" "CMOS_HREF")
QDEF(MP_QSTR_CMOS_PCLK, (const byte*)"\xbc\x09" "CMOS_PCLK")
QDEF(MP_QSTR_CMOS_PWDN, (const byte*)"\xa5\x09" "CMOS_PWDN")
QDEF(MP_QSTR_CMOS_RST, (const byte*)"\x9d\x08" "CMOS_RST")
QDEF(MP_QSTR_CMOS_VSYNC, (const byte*)"\xd9\x0a" "CMOS_VSYNC")
QDEF(MP_QSTR_CMOS_XCLK, (const byte*)"\xb4\x09" "CMOS_XCLK")
QDEF(MP_QSTR_CYAN, (const byte*)"\x10\x04" "CYAN")
QDEF(MP_QSTR_DEBUG, (const byte*)"\x34\x05" "DEBUG")
QDEF(MP_QSTR_DM_INPUT, (const byte*)"\x85\x08" "DM_INPUT")
QDEF(MP_QSTR_DM_INPUT_PULL_DOWN, (const byte*)"\xb2\x12" "DM_INPUT_PULL_DOWN")
QDEF(MP_QSTR_DM_INPUT_PULL_UP, (const byte*)"\xe5\x10" "DM_INPUT_PULL_UP")
QDEF(MP_QSTR_DM_OUTPUT, (const byte*)"\xcc\x09" "DM_OUTPUT")
QDEF(MP_QSTR_DecompIO, (const byte*)"\x93\x08" "DecompIO")
QDEF(MP_QSTR_Devmem, (const byte*)"\x57\x06" "Devmem")
QDEF(MP_QSTR_EACCES, (const byte*)"\x37\x06" "EACCES")
QDEF(MP_QSTR_EADDRINUSE, (const byte*)"\x17\x0a" "EADDRINUSE")
QDEF(MP_QSTR_EAGAIN, (const byte*)"\x20\x06" "EAGAIN")
QDEF(MP_QSTR_EALREADY, (const byte*)"\x46\x08" "EALREADY")
QDEF(MP_QSTR_EBADF, (const byte*)"\x61\x05" "EBADF")
QDEF(MP_QSTR_ECONNABORTED, (const byte*)"\x27\x0c" "ECONNABORTED")
QDEF(MP_QSTR_ECONNREFUSED, (const byte*)"\x3a\x0c" "ECONNREFUSED")
QDEF(MP_QSTR_ECONNRESET, (const byte*)"\x19\x0a" "ECONNRESET")
QDEF(MP_QSTR_EEXIST, (const byte*)"\x53\x06" "EEXIST")
QDEF(MP_QSTR_EHOSTUNREACH, (const byte*)"\x86\x0c" "EHOSTUNREACH")
QDEF(MP_QSTR_EINPROGRESS, (const byte*)"\x9a\x0b" "EINPROGRESS")
QDEF(MP_QSTR_EINVAL, (const byte*)"\x5c\x06" "EINVAL")
QDEF(MP_QSTR_EIO, (const byte*)"\x86\x03" "EIO")
QDEF(MP_QSTR_EISDIR, (const byte*)"\xa5\x06" "EISDIR")
QDEF(MP_QSTR_ENOBUFS, (const byte*)"\xe3\x07" "ENOBUFS")
QDEF(MP_QSTR_ENODEV, (const byte*)"\xb6\x06" "ENODEV")
QDEF(MP_QSTR_ENOENT, (const byte*)"\x5e\x06" "ENOENT")
QDEF(MP_QSTR_ENOMEM, (const byte*)"\xa4\x06" "ENOMEM")
QDEF(MP_QSTR_ENOTCONN, (const byte*)"\x79\x08" "ENOTCONN")
QDEF(MP_QSTR_EOFError, (const byte*)"\x91\x08" "EOFError")
QDEF(MP_QSTR_EOPNOTSUPP, (const byte*)"\xac\x0a" "EOPNOTSUPP")
QDEF(MP_QSTR_EPERM, (const byte*)"\xea\x05" "EPERM")
QDEF(MP_QSTR_ETIMEDOUT, (const byte*)"\xff\x09" "ETIMEDOUT")
QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\x08" "Ellipsis")
QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x09" "Exception")
QDEF(MP_QSTR_FLOAT32, (const byte*)"\xb4\x07" "FLOAT32")
QDEF(MP_QSTR_FLOAT64, (const byte*)"\x17\x07" "FLOAT64")
QDEF(MP_QSTR_FileIO, (const byte*)"\xc5\x06" "FileIO")
QDEF(MP_QSTR_Fpioa, (const byte*)"\x94\x05" "Fpioa")
QDEF(MP_QSTR_GBLUE, (const byte*)"\x5c\x05" "GBLUE")
QDEF(MP_QSTR_GPIO, (const byte*)"\x14\x04" "GPIO")
QDEF(MP_QSTR_GPIO0, (const byte*)"\xa4\x05" "GPIO0")
QDEF(MP_QSTR_GPIO1, (const byte*)"\xa5\x05" "GPIO1")
QDEF(MP_QSTR_GPIO2, (const byte*)"\xa6\x05" "GPIO2")
QDEF(MP_QSTR_GPIO3, (const byte*)"\xa7\x05" "GPIO3")
QDEF(MP_QSTR_GPIO4, (const byte*)"\xa0\x05" "GPIO4")
QDEF(MP_QSTR_GPIO5, (const byte*)"\xa1\x05" "GPIO5")
QDEF(MP_QSTR_GPIO6, (const byte*)"\xa2\x05" "GPIO6")
QDEF(MP_QSTR_GPIO7, (const byte*)"\xa3\x05" "GPIO7")
QDEF(MP_QSTR_GPIOHS0, (const byte*)"\xdf\x07" "GPIOHS0")
QDEF(MP_QSTR_GPIOHS1, (const byte*)"\xde\x07" "GPIOHS1")
QDEF(MP_QSTR_GPIOHS10, (const byte*)"\xae\x08" "GPIOHS10")
QDEF(MP_QSTR_GPIOHS11, (const byte*)"\xaf\x08" "GPIOHS11")
QDEF(MP_QSTR_GPIOHS12, (const byte*)"\xac\x08" "GPIOHS12")
QDEF(MP_QSTR_GPIOHS13, (const byte*)"\xad\x08" "GPIOHS13")
QDEF(MP_QSTR_GPIOHS14, (const byte*)"\xaa\x08" "GPIOHS14")
QDEF(MP_QSTR_GPIOHS15, (const byte*)"\xab\x08" "GPIOHS15")
QDEF(MP_QSTR_GPIOHS16, (const byte*)"\xa8\x08" "GPIOHS16")
QDEF(MP_QSTR_GPIOHS17, (const byte*)"\xa9\x08" "GPIOHS17")
QDEF(MP_QSTR_GPIOHS18, (const byte*)"\xa6\x08" "GPIOHS18")
QDEF(MP_QSTR_GPIOHS19, (const byte*)"\xa7\x08" "GPIOHS19")
QDEF(MP_QSTR_GPIOHS2, (const byte*)"\xdd\x07" "GPIOHS2")
QDEF(MP_QSTR_GPIOHS20, (const byte*)"\x4d\x08" "GPIOHS20")
QDEF(MP_QSTR_GPIOHS21, (const byte*)"\x4c\x08" "GPIOHS21")
QDEF(MP_QSTR_GPIOHS22, (const byte*)"\x4f\x08" "GPIOHS22")
QDEF(MP_QSTR_GPIOHS23, (const byte*)"\x4e\x08" "GPIOHS23")
QDEF(MP_QSTR_GPIOHS24, (const byte*)"\x49\x08" "GPIOHS24")
QDEF(MP_QSTR_GPIOHS25, (const byte*)"\x48\x08" "GPIOHS25")
QDEF(MP_QSTR_GPIOHS26, (const byte*)"\x4b\x08" "GPIOHS26")
QDEF(MP_QSTR_GPIOHS27, (const byte*)"\x4a\x08" "GPIOHS27")
QDEF(MP_QSTR_GPIOHS28, (const byte*)"\x45\x08" "GPIOHS28")
QDEF(MP_QSTR_GPIOHS29, (const byte*)"\x44\x08" "GPIOHS29")
QDEF(MP_QSTR_GPIOHS3, (const byte*)"\xdc\x07" "GPIOHS3")
QDEF(MP_QSTR_GPIOHS30, (const byte*)"\x6c\x08" "GPIOHS30")
QDEF(MP_QSTR_GPIOHS31, (const byte*)"\x6d\x08" "GPIOHS31")
QDEF(MP_QSTR_GPIOHS4, (const byte*)"\xdb\x07" "GPIOHS4")
QDEF(MP_QSTR_GPIOHS5, (const byte*)"\xda\x07" "GPIOHS5")
QDEF(MP_QSTR_GPIOHS6, (const byte*)"\xd9\x07" "GPIOHS6")
QDEF(MP_QSTR_GPIOHS7, (const byte*)"\xd8\x07" "GPIOHS7")
QDEF(MP_QSTR_GPIOHS8, (const byte*)"\xd7\x07" "GPIOHS8")
QDEF(MP_QSTR_GPIOHS9, (const byte*)"\xd6\x07" "GPIOHS9")
QDEF(MP_QSTR_GRAY, (const byte*)"\x08\x04" "GRAY")
QDEF(MP_QSTR_GRED, (const byte*)"\x91\x04" "GRED")
QDEF(MP_QSTR_GREEN, (const byte*)"\xde\x05" "GREEN")
QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x0d" "GeneratorExit")
QDEF(MP_QSTR_HIGH_LEVEL, (const byte*)"\x42\x0a" "HIGH_LEVEL")
QDEF(MP_QSTR_I2C0_SCLK, (const byte*)"\x85\x09" "I2C0_SCLK")
QDEF(MP_QSTR_I2C0_SDA, (const byte*)"\xe4\x08" "I2C0_SDA")
QDEF(MP_QSTR_I2C1_SCLK, (const byte*)"\x24\x09" "I2C1_SCLK")
QDEF(MP_QSTR_I2C1_SDA, (const byte*)"\xa5\x08" "I2C1_SDA")
QDEF(MP_QSTR_I2C2_SCLK, (const byte*)"\xc7\x09" "I2C2_SCLK")
QDEF(MP_QSTR_I2C2_SDA, (const byte*)"\x66\x08" "I2C2_SDA")
QDEF(MP_QSTR_I2S0_IN_D0, (const byte*)"\xce\x0a" "I2S0_IN_D0")
QDEF(MP_QSTR_I2S0_IN_D1, (const byte*)"\xcf\x0a" "I2S0_IN_D1")
QDEF(MP_QSTR_I2S0_IN_D2, (const byte*)"\xcc\x0a" "I2S0_IN_D2")
QDEF(MP_QSTR_I2S0_IN_D3, (const byte*)"\xcd\x0a" "I2S0_IN_D3")
QDEF(MP_QSTR_I2S0_MCLK, (const byte*)"\xcb\x09" "I2S0_MCLK")
QDEF(MP_QSTR_I2S0_OUT_D0, (const byte*)"\x27\x0b" "I2S0_OUT_D0")
QDEF(MP_QSTR_I2S0_OUT_D1, (const byte*)"\x26\x0b" "I2S0_OUT_D1")
QDEF(MP_QSTR_I2S0_OUT_D2, (const byte*)"\x25\x0b" "I2S0_OUT_D2")
QDEF(MP_QSTR_I2S0_OUT_D3, (const byte*)"\x24\x0b" "I2S0_OUT_D3")
QDEF(MP_QSTR_I2S0_SCLK, (const byte*)"\x95\x09" "I2S0_SCLK")
QDEF(MP_QSTR_I2S0_WS, (const byte*)"\x86\x07" "I2S0_WS")
QDEF(MP_QSTR_I2S1_IN_D0, (const byte*)"\xcf\x0a" "I2S1_IN_D0")
QDEF(MP_QSTR_I2S1_IN_D1, (const byte*)"\xce\x0a" "I2S1_IN_D1")
QDEF(MP_QSTR_I2S1_IN_D2, (const byte*)"\xcd\x0a" "I2S1_IN_D2")
QDEF(MP_QSTR_I2S1_IN_D3, (const byte*)"\xcc\x0a" "I2S1_IN_D3")
QDEF(MP_QSTR_I2S1_MCLK, (const byte*)"\x6a\x09" "I2S1_MCLK")
QDEF(MP_QSTR_I2S1_OUT_D0, (const byte*)"\x46\x0b" "I2S1_OUT_D0")
QDEF(MP_QSTR_I2S1_OUT_D1, (const byte*)"\x47\x0b" "I2S1_OUT_D1")
QDEF(MP_QSTR_I2S1_OUT_D2, (const byte*)"\x44\x0b" "I2S1_OUT_D2")
QDEF(MP_QSTR_I2S1_OUT_D3, (const byte*)"\x45\x0b" "I2S1_OUT_D3")
QDEF(MP_QSTR_I2S1_SCLK, (const byte*)"\x34\x09" "I2S1_SCLK")
QDEF(MP_QSTR_I2S1_WS, (const byte*)"\xe7\x07" "I2S1_WS")
QDEF(MP_QSTR_I2S2_IN_D0, (const byte*)"\xcc\x0a" "I2S2_IN_D0")
QDEF(MP_QSTR_I2S2_IN_D1, (const byte*)"\xcd\x0a" "I2S2_IN_D1")
QDEF(MP_QSTR_I2S2_IN_D2, (const byte*)"\xce\x0a" "I2S2_IN_D2")
QDEF(MP_QSTR_I2S2_IN_D3, (const byte*)"\xcf\x0a" "I2S2_IN_D3")
QDEF(MP_QSTR_I2S2_MCLK, (const byte*)"\x89\x09" "I2S2_MCLK")
QDEF(MP_QSTR_I2S2_OUT_D0, (const byte*)"\xe5\x0b" "I2S2_OUT_D0")
QDEF(MP_QSTR_I2S2_OUT_D1, (const byte*)"\xe4\x0b" "I2S2_OUT_D1")
QDEF(MP_QSTR_I2S2_OUT_D2, (const byte*)"\xe7\x0b" "I2S2_OUT_D2")
QDEF(MP_QSTR_I2S2_OUT_D3, (const byte*)"\xe6\x0b" "I2S2_OUT_D3")
QDEF(MP_QSTR_I2S2_SCLK, (const byte*)"\xd7\x09" "I2S2_SCLK")
QDEF(MP_QSTR_I2S2_WS, (const byte*)"\xc4\x07" "I2S2_WS")
QDEF(MP_QSTR_INT16, (const byte*)"\x91\x05" "INT16")
QDEF(MP_QSTR_INT32, (const byte*)"\x57\x05" "INT32")
QDEF(MP_QSTR_INT64, (const byte*)"\xf4\x05" "INT64")
QDEF(MP_QSTR_INT8, (const byte*)"\xce\x04" "INT8")
QDEF(MP_QSTR_IOBase, (const byte*)"\x36\x06" "IOBase")
QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x0b" "ImportError")
QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x10" "IndentationError")
QDEF(MP_QSTR_IndexError, (const byte*)"\x83\x0a" "IndexError")
QDEF(MP_QSTR_JTAG_TCLK, (const byte*)"\xd2\x09" "JTAG_TCLK")
QDEF(MP_QSTR_JTAG_TDI, (const byte*)"\x9b\x08" "JTAG_TDI")
QDEF(MP_QSTR_JTAG_TDO, (const byte*)"\x9d\x08" "JTAG_TDO")
QDEF(MP_QSTR_JTAG_TMS, (const byte*)"\xa8\x08" "JTAG_TMS")
QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x08" "KeyError")
QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\x11" "KeyboardInterrupt")
QDEF(MP_QSTR_LITTLE_ENDIAN, (const byte*)"\xbf\x0d" "LITTLE_ENDIAN")
QDEF(MP_QSTR_LOW_LEVEL, (const byte*)"\x78\x09" "LOW_LEVEL")
QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x0b" "LookupError")
QDEF(MP_QSTR_MAGENTA, (const byte*)"\xf0\x07" "MAGENTA")
QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x0b" "MemoryError")
QDEF(MP_QSTR_NATIVE, (const byte*)"\x04\x06" "NATIVE")
QDEF(MP_QSTR_NameError, (const byte*)"\xba\x09" "NameError")
QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x08" "NoneType")
QDEF(MP_QSTR_NotImplemented, (const byte*)"\x3e\x0e" "NotImplemented")
QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x13" "NotImplementedError")
QDEF(MP_QSTR_ONE_SHOT, (const byte*)"\x5e\x08" "ONE_SHOT")
QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x07" "OSError")
QDEF(MP_QSTR_OrderedDict, (const byte*)"\xf0\x0b" "OrderedDict")
QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\x0d" "OverflowError")
QDEF(MP_QSTR_PERIODIC, (const byte*)"\x0a\x08" "PERIODIC")
QDEF(MP_QSTR_PTR, (const byte*)"\xb3\x03" "PTR")
QDEF(MP_QSTR_PWM, (const byte*)"\x4f\x03" "PWM")
QDEF(MP_QSTR_Pin, (const byte*)"\x12\x03" "Pin")
QDEF(MP_QSTR_PinBase, (const byte*)"\x47\x07" "PinBase")
QDEF(MP_QSTR_RED, (const byte*)"\x96\x03" "RED")
QDEF(MP_QSTR_RESV0, (const byte*)"\xe7\x05" "RESV0")
QDEF(MP_QSTR_RESV1, (const byte*)"\xe6\x05" "RESV1")
QDEF(MP_QSTR_RESV2, (const byte*)"\xe5\x05" "RESV2")
QDEF(MP_QSTR_RESV3, (const byte*)"\xe4\x05" "RESV3")
QDEF(MP_QSTR_RESV4, (const byte*)"\xe3\x05" "RESV4")
QDEF(MP_QSTR_RESV5, (const byte*)"\xe2\x05" "RESV5")
QDEF(MP_QSTR_RESV6, (const byte*)"\xe1\x05" "RESV6")
QDEF(MP_QSTR_RESV7, (const byte*)"\xe0\x05" "RESV7")
QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\x0c" "RuntimeError")
QDEF(MP_QSTR_SCCB_SCLK, (const byte*)"\x3c\x09" "SCCB_SCLK")
QDEF(MP_QSTR_SCCB_SDA, (const byte*)"\xbd\x08" "SCCB_SDA")
QDEF(MP_QSTR_SEEK_CUR, (const byte*)"\x86\x08" "SEEK_CUR")
QDEF(MP_QSTR_SEEK_END, (const byte*)"\xed\x08" "SEEK_END")
QDEF(MP_QSTR_SEEK_SET, (const byte*)"\x80\x08" "SEEK_SET")
QDEF(MP_QSTR_SOCK_DGRAM, (const byte*)"\xb3\x0a" "SOCK_DGRAM")
QDEF(MP_QSTR_SOCK_RAW, (const byte*)"\xca\x08" "SOCK_RAW")
QDEF(MP_QSTR_SOCK_STREAM, (const byte*)"\x32\x0b" "SOCK_STREAM")
QDEF(MP_QSTR_SPI0_ARB, (const byte*)"\x51\x08" "SPI0_ARB")
QDEF(MP_QSTR_SPI0_D0, (const byte*)"\x74\x07" "SPI0_D0")
QDEF(MP_QSTR_SPI0_D1, (const byte*)"\x75\x07" "SPI0_D1")
QDEF(MP_QSTR_SPI0_D2, (const byte*)"\x76\x07" "SPI0_D2")
QDEF(MP_QSTR_SPI0_D3, (const byte*)"\x77\x07" "SPI0_D3")
QDEF(MP_QSTR_SPI0_D4, (const byte*)"\x70\x07" "SPI0_D4")
QDEF(MP_QSTR_SPI0_D5, (const byte*)"\x71\x07" "SPI0_D5")
QDEF(MP_QSTR_SPI0_D6, (const byte*)"\x72\x07" "SPI0_D6")
QDEF(MP_QSTR_SPI0_D7, (const byte*)"\x73\x07" "SPI0_D7")
QDEF(MP_QSTR_SPI0_SCLK, (const byte*)"\xf7\x09" "SPI0_SCLK")
QDEF(MP_QSTR_SPI0_SS0, (const byte*)"\x50\x08" "SPI0_SS0")
QDEF(MP_QSTR_SPI0_SS1, (const byte*)"\x51\x08" "SPI0_SS1")
QDEF(MP_QSTR_SPI0_SS2, (const byte*)"\x52\x08" "SPI0_SS2")
QDEF(MP_QSTR_SPI0_SS3, (const byte*)"\x53\x08" "SPI0_SS3")
QDEF(MP_QSTR_SPI1_ARB, (const byte*)"\x10\x08" "SPI1_ARB")
QDEF(MP_QSTR_SPI1_D0, (const byte*)"\xd5\x07" "SPI1_D0")
QDEF(MP_QSTR_SPI1_D1, (const byte*)"\xd4\x07" "SPI1_D1")
QDEF(MP_QSTR_SPI1_D2, (const byte*)"\xd7\x07" "SPI1_D2")
QDEF(MP_QSTR_SPI1_D3, (const byte*)"\xd6\x07" "SPI1_D3")
QDEF(MP_QSTR_SPI1_D4, (const byte*)"\xd1\x07" "SPI1_D4")
QDEF(MP_QSTR_SPI1_D5, (const byte*)"\xd0\x07" "SPI1_D5")
QDEF(MP_QSTR_SPI1_D6, (const byte*)"\xd3\x07" "SPI1_D6")
QDEF(MP_QSTR_SPI1_D7, (const byte*)"\xd2\x07" "SPI1_D7")
QDEF(MP_QSTR_SPI1_SCLK, (const byte*)"\x16\x09" "SPI1_SCLK")
QDEF(MP_QSTR_SPI1_SS0, (const byte*)"\xd1\x08" "SPI1_SS0")
QDEF(MP_QSTR_SPI1_SS1, (const byte*)"\xd0\x08" "SPI1_SS1")
QDEF(MP_QSTR_SPI1_SS2, (const byte*)"\xd3\x08" "SPI1_SS2")
QDEF(MP_QSTR_SPI1_SS3, (const byte*)"\xd2\x08" "SPI1_SS3")
QDEF(MP_QSTR_SPIFLASH, (const byte*)"\xbf\x08" "SPIFLASH")
QDEF(MP_QSTR_SPI_SLAVE_D0, (const byte*)"\xd6\x0c" "SPI_SLAVE_D0")
QDEF(MP_QSTR_SPI_SLAVE_SCLK, (const byte*)"\x95\x0e" "SPI_SLAVE_SCLK")
QDEF(MP_QSTR_SPI_SLAVE_SS, (const byte*)"\x02\x0c" "SPI_SLAVE_SS")
QDEF(MP_QSTR_Signal, (const byte*)"\x9b\x06" "Signal")
QDEF(MP_QSTR_St7789, (const byte*)"\x63\x06" "St7789")
QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x0d" "StopIteration")
QDEF(MP_QSTR_StringIO, (const byte*)"\x76\x08" "StringIO")
QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x0b" "SyntaxError")
QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\x0a" "SystemExit")
QDEF(MP_QSTR_TIMER0, (const byte*)"\xd2\x06" "TIMER0")
QDEF(MP_QSTR_TIMER0_TOGGLE1, (const byte*)"\xee\x0e" "TIMER0_TOGGLE1")
QDEF(MP_QSTR_TIMER0_TOGGLE2, (const byte*)"\xed\x0e" "TIMER0_TOGGLE2")
QDEF(MP_QSTR_TIMER0_TOGGLE3, (const byte*)"\xec\x0e" "TIMER0_TOGGLE3")
QDEF(MP_QSTR_TIMER0_TOGGLE4, (const byte*)"\xeb\x0e" "TIMER0_TOGGLE4")
QDEF(MP_QSTR_TIMER1, (const byte*)"\xd3\x06" "TIMER1")
QDEF(MP_QSTR_TIMER1_TOGGLE1, (const byte*)"\xef\x0e" "TIMER1_TOGGLE1")
QDEF(MP_QSTR_TIMER1_TOGGLE2, (const byte*)"\xec\x0e" "TIMER1_TOGGLE2")
QDEF(MP_QSTR_TIMER1_TOGGLE3, (const byte*)"\xed\x0e" "TIMER1_TOGGLE3")
QDEF(MP_QSTR_TIMER1_TOGGLE4, (const byte*)"\xea\x0e" "TIMER1_TOGGLE4")
QDEF(MP_QSTR_TIMER2, (const byte*)"\xd0\x06" "TIMER2")
QDEF(MP_QSTR_TIMER2_TOGGLE1, (const byte*)"\x6c\x0e" "TIMER2_TOGGLE1")
QDEF(MP_QSTR_TIMER2_TOGGLE2, (const byte*)"\x6f\x0e" "TIMER2_TOGGLE2")
QDEF(MP_QSTR_TIMER2_TOGGLE3, (const byte*)"\x6e\x0e" "TIMER2_TOGGLE3")
QDEF(MP_QSTR_TIMER2_TOGGLE4, (const byte*)"\x69\x0e" "TIMER2_TOGGLE4")
QDEF(MP_QSTR_Test, (const byte*)"\x13\x04" "Test")
QDEF(MP_QSTR_TextIOWrapper, (const byte*)"\xad\x0d" "TextIOWrapper")
QDEF(MP_QSTR_TimeoutError, (const byte*)"\x66\x0c" "TimeoutError")
QDEF(MP_QSTR_Timer, (const byte*)"\xa2\x05" "Timer")
QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x09" "TypeError")
QDEF(MP_QSTR_UART, (const byte*)"\xb7\x04" "UART")
QDEF(MP_QSTR_UART1, (const byte*)"\xa6\x05" "UART1")
QDEF(MP_QSTR_UART1_BAUD, (const byte*)"\x4b\x0a" "UART1_BAUD")
QDEF(MP_QSTR_UART1_CTS, (const byte*)"\x9d\x09" "UART1_CTS")
QDEF(MP_QSTR_UART1_DCD, (const byte*)"\xfa\x09" "UART1_DCD")
QDEF(MP_QSTR_UART1_DE, (const byte*)"\xf8\x08" "UART1_DE")
QDEF(MP_QSTR_UART1_DSR, (const byte*)"\xfc\x09" "UART1_DSR")
QDEF(MP_QSTR_UART1_DTR, (const byte*)"\x5b\x09" "UART1_DTR")
QDEF(MP_QSTR_UART1_OUT1, (const byte*)"\xa6\x0a" "UART1_OUT1")
QDEF(MP_QSTR_UART1_OUT2, (const byte*)"\xa5\x0a" "UART1_OUT2")
QDEF(MP_QSTR_UART1_RE, (const byte*)"\x2e\x08" "UART1_RE")
QDEF(MP_QSTR_UART1_RI, (const byte*)"\x22\x08" "UART1_RI")
QDEF(MP_QSTR_UART1_RS485_EN, (const byte*)"\x95\x0e" "UART1_RS485_EN")
QDEF(MP_QSTR_UART1_RTS, (const byte*)"\x4c\x09" "UART1_RTS")
QDEF(MP_QSTR_UART1_RX, (const byte*)"\x33\x08" "UART1_RX")
QDEF(MP_QSTR_UART1_SIR_IN, (const byte*)"\x29\x0c" "UART1_SIR_IN")
QDEF(MP_QSTR_UART1_SIR_OUT, (const byte*)"\x20\x0d" "UART1_SIR_OUT")
QDEF(MP_QSTR_UART1_TX, (const byte*)"\xf5\x08" "UART1_TX")
QDEF(MP_QSTR_UART2, (const byte*)"\xa5\x05" "UART2")
QDEF(MP_QSTR_UART2_BAUD, (const byte*)"\xe8\x0a" "UART2_BAUD")
QDEF(MP_QSTR_UART2_CTS, (const byte*)"\x5e\x09" "UART2_CTS")
QDEF(MP_QSTR_UART2_DCD, (const byte*)"\x79\x09" "UART2_DCD")
QDEF(MP_QSTR_UART2_DE, (const byte*)"\x9b\x08" "UART2_DE")
QDEF(MP_QSTR_UART2_DSR, (const byte*)"\x7f\x09" "UART2_DSR")
QDEF(MP_QSTR_UART2_DTR, (const byte*)"\x98\x09" "UART2_DTR")
QDEF(MP_QSTR_UART2_OUT1, (const byte*)"\x05\x0a" "UART2_OUT1")
QDEF(MP_QSTR_UART2_OUT2, (const byte*)"\x06\x0a" "UART2_OUT2")
QDEF(MP_QSTR_UART2_RE, (const byte*)"\x4d\x08" "UART2_RE")
QDEF(MP_QSTR_UART2_RI, (const byte*)"\x41\x08" "UART2_RI")
QDEF(MP_QSTR_UART2_RS485_EN, (const byte*)"\xb6\x0e" "UART2_RS485_EN")
QDEF(MP_QSTR_UART2_RTS, (const byte*)"\x8f\x09" "UART2_RTS")
QDEF(MP_QSTR_UART2_RX, (const byte*)"\x50\x08" "UART2_RX")
QDEF(MP_QSTR_UART2_SIR_IN, (const byte*)"\x4a\x0c" "UART2_SIR_IN")
QDEF(MP_QSTR_UART2_SIR_OUT, (const byte*)"\x23\x0d" "UART2_SIR_OUT")
QDEF(MP_QSTR_UART2_TX, (const byte*)"\x96\x08" "UART2_TX")
QDEF(MP_QSTR_UART3, (const byte*)"\xa4\x05" "UART3")
QDEF(MP_QSTR_UART3_BAUD, (const byte*)"\x09\x0a" "UART3_BAUD")
QDEF(MP_QSTR_UART3_CTS, (const byte*)"\x1f\x09" "UART3_CTS")
QDEF(MP_QSTR_UART3_DCD, (const byte*)"\xf8\x09" "UART3_DCD")
QDEF(MP_QSTR_UART3_DE, (const byte*)"\x3a\x08" "UART3_DE")
QDEF(MP_QSTR_UART3_DSR, (const byte*)"\xfe\x09" "UART3_DSR")
QDEF(MP_QSTR_UART3_DTR, (const byte*)"\xd9\x09" "UART3_DTR")
QDEF(MP_QSTR_UART3_OUT1, (const byte*)"\xe4\x0a" "UART3_OUT1")
QDEF(MP_QSTR_UART3_OUT2, (const byte*)"\xe7\x0a" "UART3_OUT2")
QDEF(MP_QSTR_UART3_RE, (const byte*)"\xec\x08" "UART3_RE")
QDEF(MP_QSTR_UART3_RI, (const byte*)"\xe0\x08" "UART3_RI")
QDEF(MP_QSTR_UART3_RS485_EN, (const byte*)"\xd7\x0e" "UART3_RS485_EN")
QDEF(MP_QSTR_UART3_RTS, (const byte*)"\xce\x09" "UART3_RTS")
QDEF(MP_QSTR_UART3_RX, (const byte*)"\xf1\x08" "UART3_RX")
QDEF(MP_QSTR_UART3_SIR_IN, (const byte*)"\x6b\x0c" "UART3_SIR_IN")
QDEF(MP_QSTR_UART3_SIR_OUT, (const byte*)"\x22\x0d" "UART3_SIR_OUT")
QDEF(MP_QSTR_UART3_TX, (const byte*)"\x37\x08" "UART3_TX")
QDEF(MP_QSTR_UARTHS_RX, (const byte*)"\xb9\x09" "UARTHS_RX")
QDEF(MP_QSTR_UARTHS_TX, (const byte*)"\xff\x09" "UARTHS_TX")
QDEF(MP_QSTR_UINT16, (const byte*)"\xc4\x06" "UINT16")
QDEF(MP_QSTR_UINT32, (const byte*)"\x82\x06" "UINT32")
QDEF(MP_QSTR_UINT64, (const byte*)"\x61\x06" "UINT64")
QDEF(MP_QSTR_UINT8, (const byte*)"\xbb\x05" "UINT8")
QDEF(MP_QSTR_UnicodeError, (const byte*)"\x22\x0c" "UnicodeError")
QDEF(MP_QSTR_VOID, (const byte*)"\x31\x04" "VOID")
QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x0a" "ValueError")
QDEF(MP_QSTR_WHITE, (const byte*)"\xa2\x05" "WHITE")
QDEF(MP_QSTR_Ws2812, (const byte*)"\x28\x06" "Ws2812")
QDEF(MP_QSTR_YELLOW, (const byte*)"\x41\x06" "YELLOW")
QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x11" "ZeroDivisionError")
QDEF(MP_QSTR__webrepl, (const byte*)"\x21\x08" "_webrepl")
QDEF(MP_QSTR_a2b_base64, (const byte*)"\x3c\x0a" "a2b_base64")
QDEF(MP_QSTR_abs, (const byte*)"\x95\x03" "abs")
QDEF(MP_QSTR_ack, (const byte*)"\x6c\x03" "ack")
QDEF(MP_QSTR_acos, (const byte*)"\x1b\x04" "acos")
QDEF(MP_QSTR_acosh, (const byte*)"\x13\x05" "acosh")
QDEF(MP_QSTR_add, (const byte*)"\x44\x03" "add")
QDEF(MP_QSTR_addr, (const byte*)"\xb6\x04" "addr")
QDEF(MP_QSTR_addressof, (const byte*)"\x5a\x09" "addressof")
QDEF(MP_QSTR_all, (const byte*)"\x44\x03" "all")
QDEF(MP_QSTR_alloc_emergency_exception_buf, (const byte*)"\x78\x1d" "alloc_emergency_exception_buf")
QDEF(MP_QSTR_any, (const byte*)"\x13\x03" "any")
QDEF(MP_QSTR_append, (const byte*)"\x6b\x06" "append")
QDEF(MP_QSTR_args, (const byte*)"\xc2\x04" "args")
QDEF(MP_QSTR_argv, (const byte*)"\xc7\x04" "argv")
QDEF(MP_QSTR_array, (const byte*)"\x7c\x05" "array")
QDEF(MP_QSTR_asin, (const byte*)"\x50\x04" "asin")
QDEF(MP_QSTR_asinh, (const byte*)"\x38\x05" "asinh")
QDEF(MP_QSTR_atan, (const byte*)"\x1f\x04" "atan")
QDEF(MP_QSTR_atan2, (const byte*)"\xcd\x05" "atan2")
QDEF(MP_QSTR_atanh, (const byte*)"\x97\x05" "atanh")
QDEF(MP_QSTR_b2a_base64, (const byte*)"\x3c\x0a" "b2a_base64")
QDEF(MP_QSTR_baudrate, (const byte*)"\xf5\x08" "baudrate")
QDEF(MP_QSTR_bin, (const byte*)"\xe0\x03" "bin")
QDEF(MP_QSTR_binascii, (const byte*)"\x91\x08" "binascii")
QDEF(MP_QSTR_bits, (const byte*)"\x49\x04" "bits")
QDEF(MP_QSTR_blue, (const byte*)"\x7b\x04" "blue")
QDEF(MP_QSTR_bool, (const byte*)"\xeb\x04" "bool")
QDEF(MP_QSTR_bound_method, (const byte*)"\x97\x0c" "bound_method")
QDEF(MP_QSTR_buf, (const byte*)"\x74\x03" "buf")
QDEF(MP_QSTR_buffer, (const byte*)"\xe5\x06" "buffer")
QDEF(MP_QSTR_buffering, (const byte*)"\x25\x09" "buffering")
QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x08" "builtins")
QDEF(MP_QSTR_burner, (const byte*)"\x79\x06" "burner")
QDEF(MP_QSTR_bytearray, (const byte*)"\x76\x09" "bytearray")
QDEF(MP_QSTR_bytearray_at, (const byte*)"\x9c\x0c" "bytearray_at")
QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x08" "bytecode")
QDEF(MP_QSTR_byteorder, (const byte*)"\x61\x09" "byteorder")
QDEF(MP_QSTR_bytes, (const byte*)"\x5c\x05" "bytes")
QDEF(MP_QSTR_bytes_at, (const byte*)"\xb6\x08" "bytes_at")
QDEF(MP_QSTR_calcsize, (const byte*)"\x4d\x08" "calcsize")
QDEF(MP_QSTR_callable, (const byte*)"\x0d\x08" "callable")
QDEF(MP_QSTR_callback, (const byte*)"\x4c\x08" "callback")
QDEF(MP_QSTR_ceil, (const byte*)"\x06\x04" "ceil")
QDEF(MP_QSTR_center, (const byte*)"\x4e\x06" "center")
QDEF(MP_QSTR_choice, (const byte*)"\x2e\x06" "choice")
QDEF(MP_QSTR_chr, (const byte*)"\xdc\x03" "chr")
QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x0b" "classmethod")
QDEF(MP_QSTR_clear, (const byte*)"\x7c\x05" "clear")
QDEF(MP_QSTR_close, (const byte*)"\x33\x05" "close")
QDEF(MP_QSTR_closure, (const byte*)"\x74\x07" "closure")
QDEF(MP_QSTR_cmd, (const byte*)"\x2f\x03" "cmd")
QDEF(MP_QSTR_code, (const byte*)"\x68\x04" "code")
QDEF(MP_QSTR_collect, (const byte*)"\x9b\x07" "collect")
QDEF(MP_QSTR_collections, (const byte*)"\xe0\x0b" "collections")
QDEF(MP_QSTR_color, (const byte*)"\xd8\x05" "color")
QDEF(MP_QSTR_compile, (const byte*)"\xf4\x07" "compile")
QDEF(MP_QSTR_connect, (const byte*)"\xdb\x07" "connect")
QDEF(MP_QSTR_const, (const byte*)"\xc0\x05" "const")
QDEF(MP_QSTR_copy, (const byte*)"\xe0\x04" "copy")
QDEF(MP_QSTR_copysign, (const byte*)"\x33\x08" "copysign")
QDEF(MP_QSTR_cos, (const byte*)"\x7a\x03" "cos")
QDEF(MP_QSTR_cosh, (const byte*)"\xd2\x04" "cosh")
QDEF(MP_QSTR_count, (const byte*)"\xa6\x05" "count")
QDEF(MP_QSTR_crc32, (const byte*)"\x76\x05" "crc32")
QDEF(MP_QSTR_decode, (const byte*)"\xa9\x06" "decode")
QDEF(MP_QSTR_decompress, (const byte*)"\x62\x0a" "decompress")
QDEF(MP_QSTR_degrees, (const byte*)"\x02\x07" "degrees")
QDEF(MP_QSTR_deinit, (const byte*)"\x9e\x06" "deinit")
QDEF(MP_QSTR_delattr, (const byte*)"\xdb\x07" "delattr")
QDEF(MP_QSTR_deleter, (const byte*)"\x6e\x07" "deleter")
QDEF(MP_QSTR_deque, (const byte*)"\x05\x05" "deque")
QDEF(MP_QSTR_devmem, (const byte*)"\x77\x06" "devmem")
QDEF(MP_QSTR_dict, (const byte*)"\x3f\x04" "dict")
QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\x09" "dict_view")
QDEF(MP_QSTR_difference, (const byte*)"\x72\x0a" "difference")
QDEF(MP_QSTR_difference_update, (const byte*)"\x9c\x11" "difference_update")
QDEF(MP_QSTR_dir, (const byte*)"\xfa\x03" "dir")
QDEF(MP_QSTR_disable, (const byte*)"\x91\x07" "disable")
QDEF(MP_QSTR_discard, (const byte*)"\x0f\x07" "discard")
QDEF(MP_QSTR_disconnect, (const byte*)"\xa5\x0a" "disconnect")
QDEF(MP_QSTR_div, (const byte*)"\xfe\x03" "div")
QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x06" "divmod")
QDEF(MP_QSTR_doc, (const byte*)"\x2d\x03" "doc")
QDEF(MP_QSTR_draw_picture, (const byte*)"\x56\x0c" "draw_picture")
QDEF(MP_QSTR_draw_picture_default, (const byte*)"\x02\x14" "draw_picture_default")
QDEF(MP_QSTR_draw_pt, (const byte*)"\x1e\x07" "draw_pt")
QDEF(MP_QSTR_draw_string, (const byte*)"\xaf\x0b" "draw_string")
QDEF(MP_QSTR_duty, (const byte*)"\x19\x04" "duty")
QDEF(MP_QSTR_e, (const byte*)"\xc0\x01" "e")
QDEF(MP_QSTR_enable, (const byte*)"\x04\x06" "enable")
QDEF(MP_QSTR_encode, (const byte*)"\x43\x06" "encode")
QDEF(MP_QSTR_encoding, (const byte*)"\x06\x08" "encoding")
QDEF(MP_QSTR_end, (const byte*)"\x0a\x03" "end")
QDEF(MP_QSTR_endswith, (const byte*)"\x1b\x08" "endswith")
QDEF(MP_QSTR_enumerate, (const byte*)"\x71\x09" "enumerate")
QDEF(MP_QSTR_erf, (const byte*)"\x94\x03" "erf")
QDEF(MP_QSTR_erfc, (const byte*)"\x77\x04" "erfc")
QDEF(MP_QSTR_errno, (const byte*)"\xc1\x05" "errno")
QDEF(MP_QSTR_errorcode, (const byte*)"\x10\x09" "errorcode")
QDEF(MP_QSTR_esp8285, (const byte*)"\xe4\x07" "esp8285")
QDEF(MP_QSTR_eval, (const byte*)"\x9b\x04" "eval")
QDEF(MP_QSTR_exec, (const byte*)"\x1e\x04" "exec")
QDEF(MP_QSTR_execfile, (const byte*)"\x58\x08" "execfile")
QDEF(MP_QSTR_exit, (const byte*)"\x85\x04" "exit")
QDEF(MP_QSTR_exp, (const byte*)"\xc8\x03" "exp")
QDEF(MP_QSTR_expm1, (const byte*)"\x74\x05" "expm1")
QDEF(MP_QSTR_extend, (const byte*)"\x63\x06" "extend")
QDEF(MP_QSTR_fabs, (const byte*)"\x93\x04" "fabs")
QDEF(MP_QSTR_face_detect, (const byte*)"\x1c\x0b" "face_detect")
QDEF(MP_QSTR_file, (const byte*)"\xc3\x04" "file")
QDEF(MP_QSTR_filter, (const byte*)"\x25\x06" "filter")
QDEF(MP_QSTR_find, (const byte*)"\x01\x04" "find")
QDEF(MP_QSTR_flash_erase, (const byte*)"\xca\x0b" "flash_erase")
QDEF(MP_QSTR_flash_read, (const byte*)"\xb8\x0a" "flash_read")
QDEF(MP_QSTR_flash_size, (const byte*)"\x2f\x0a" "flash_size")
QDEF(MP_QSTR_flash_write, (const byte*)"\x37\x0b" "flash_write")
QDEF(MP_QSTR_float, (const byte*)"\x35\x05" "float")
QDEF(MP_QSTR_floor, (const byte*)"\x7d\x05" "floor")
QDEF(MP_QSTR_flush, (const byte*)"\x61\x05" "flush")
QDEF(MP_QSTR_fmod, (const byte*)"\xe5\x04" "fmod")
QDEF(MP_QSTR_format, (const byte*)"\x26\x06" "format")
QDEF(MP_QSTR_formatfs, (const byte*)"\xf3\x08" "formatfs")
QDEF(MP_QSTR_fpioa, (const byte*)"\x74\x05" "fpioa")
QDEF(MP_QSTR_freq, (const byte*)"\xe5\x04" "freq")
QDEF(MP_QSTR_frexp, (const byte*)"\x1c\x05" "frexp")
QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x0a" "from_bytes")
QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\x08" "fromkeys")
QDEF(MP_QSTR_frozenset, (const byte*)"\xed\x09" "frozenset")
QDEF(MP_QSTR_func, (const byte*)"\x1b\x04" "func")
QDEF(MP_QSTR_function, (const byte*)"\x27\x08" "function")
QDEF(MP_QSTR_gamma, (const byte*)"\x02\x05" "gamma")
QDEF(MP_QSTR_gc, (const byte*)"\x61\x02" "gc")
QDEF(MP_QSTR_generator, (const byte*)"\x96\x09" "generator")
QDEF(MP_QSTR_get, (const byte*)"\x33\x03" "get")
QDEF(MP_QSTR_get_image, (const byte*)"\x2b\x09" "get_image")
QDEF(MP_QSTR_getaddrinfo, (const byte*)"\x6e\x0b" "getaddrinfo")
QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x07" "getattr")
QDEF(MP_QSTR_getrandbits, (const byte*)"\x66\x0b" "getrandbits")
QDEF(MP_QSTR_getter, (const byte*)"\x90\x06" "getter")
QDEF(MP_QSTR_getvalue, (const byte*)"\x78\x08" "getvalue")
QDEF(MP_QSTR_globals, (const byte*)"\x9d\x07" "globals")
QDEF(MP_QSTR_gpio_num, (const byte*)"\x3d\x08" "gpio_num")
QDEF(MP_QSTR_green, (const byte*)"\xbe\x05" "green")
QDEF(MP_QSTR_group, (const byte*)"\xba\x05" "group")
QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\x07" "hasattr")
QDEF(MP_QSTR_hash, (const byte*)"\xb7\x04" "hash")
QDEF(MP_QSTR_heap_lock, (const byte*)"\xad\x09" "heap_lock")
QDEF(MP_QSTR_heap_unlock, (const byte*)"\x56\x0b" "heap_unlock")
QDEF(MP_QSTR_heapify, (const byte*)"\xaf\x07" "heapify")
QDEF(MP_QSTR_heappop, (const byte*)"\xd6\x07" "heappop")
QDEF(MP_QSTR_heappush, (const byte*)"\x87\x08" "heappush")
QDEF(MP_QSTR_height, (const byte*)"\xfa\x06" "height")
QDEF(MP_QSTR_help, (const byte*)"\x94\x04" "help")
QDEF(MP_QSTR_hex, (const byte*)"\x70\x03" "hex")
QDEF(MP_QSTR_hexlify, (const byte*)"\x2a\x07" "hexlify")
QDEF(MP_QSTR_id, (const byte*)"\x28\x02" "id")
QDEF(MP_QSTR_implementation, (const byte*)"\x17\x0e" "implementation")
QDEF(MP_QSTR_index, (const byte*)"\x7b\x05" "index")
QDEF(MP_QSTR_init, (const byte*)"\x1f\x04" "init")
QDEF(MP_QSTR_input, (const byte*)"\x73\x05" "input")
QDEF(MP_QSTR_insert, (const byte*)"\x12\x06" "insert")
QDEF(MP_QSTR_int, (const byte*)"\x16\x03" "int")
QDEF(MP_QSTR_intersection, (const byte*)"\x28\x0c" "intersection")
QDEF(MP_QSTR_intersection_update, (const byte*)"\x06\x13" "intersection_update")
QDEF(MP_QSTR_invert, (const byte*)"\xb7\x06" "invert")
QDEF(MP_QSTR_ioctl, (const byte*)"\x78\x05" "ioctl")
QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x07" "isalpha")
QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x07" "isdigit")
QDEF(MP_QSTR_isdisjoint, (const byte*)"\xf7\x0a" "isdisjoint")
QDEF(MP_QSTR_isenabled, (const byte*)"\x9a\x09" "isenabled")
QDEF(MP_QSTR_isfinite, (const byte*)"\xa6\x08" "isfinite")
QDEF(MP_QSTR_isinf, (const byte*)"\x3e\x05" "isinf")
QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\x0a" "isinstance")
QDEF(MP_QSTR_islower, (const byte*)"\xfc\x07" "islower")
QDEF(MP_QSTR_isnan, (const byte*)"\x9e\x05" "isnan")
QDEF(MP_QSTR_isspace, (const byte*)"\x5b\x07" "isspace")
QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x0a" "issubclass")
QDEF(MP_QSTR_issubset, (const byte*)"\xb9\x08" "issubset")
QDEF(MP_QSTR_issuperset, (const byte*)"\xfc\x0a" "issuperset")
QDEF(MP_QSTR_isupper, (const byte*)"\xdd\x07" "isupper")
QDEF(MP_QSTR_items, (const byte*)"\xe3\x05" "items")
QDEF(MP_QSTR_iter, (const byte*)"\x8f\x04" "iter")
QDEF(MP_QSTR_iterable, (const byte*)"\x25\x08" "iterable")
QDEF(MP_QSTR_iterator, (const byte*)"\x47\x08" "iterator")
QDEF(MP_QSTR_join, (const byte*)"\xa7\x04" "join")
QDEF(MP_QSTR_kbd_intr, (const byte*)"\xf6\x08" "kbd_intr")
QDEF(MP_QSTR_keepends, (const byte*)"\x62\x08" "keepends")
QDEF(MP_QSTR_key, (const byte*)"\x32\x03" "key")
QDEF(MP_QSTR_keys, (const byte*)"\x01\x04" "keys")
QDEF(MP_QSTR_ldexp, (const byte*)"\x40\x05" "ldexp")
QDEF(MP_QSTR_len, (const byte*)"\x62\x03" "len")
QDEF(MP_QSTR_lgamma, (const byte*)"\xce\x06" "lgamma")
QDEF(MP_QSTR_list, (const byte*)"\x27\x04" "list")
QDEF(MP_QSTR_listdir, (const byte*)"\x98\x07" "listdir")
QDEF(MP_QSTR_little, (const byte*)"\x89\x06" "little")
QDEF(MP_QSTR_locals, (const byte*)"\x3b\x06" "locals")
QDEF(MP_QSTR_log, (const byte*)"\x21\x03" "log")
QDEF(MP_QSTR_log10, (const byte*)"\x40\x05" "log10")
QDEF(MP_QSTR_log2, (const byte*)"\x73\x04" "log2")
QDEF(MP_QSTR_lower, (const byte*)"\xc6\x05" "lower")
QDEF(MP_QSTR_ls, (const byte*)"\x9a\x02" "ls")
QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\x06" "lstrip")
QDEF(MP_QSTR_machine, (const byte*)"\x60\x07" "machine")
QDEF(MP_QSTR_map, (const byte*)"\xb9\x03" "map")
QDEF(MP_QSTR_match, (const byte*)"\x96\x05" "match")
QDEF(MP_QSTR_math, (const byte*)"\x35\x04" "math")
QDEF(MP_QSTR_maxsize, (const byte*)"\xd4\x07" "maxsize")
QDEF(MP_QSTR_mem, (const byte*)"\x20\x03" "mem")
QDEF(MP_QSTR_mem_alloc, (const byte*)"\x52\x09" "mem_alloc")
QDEF(MP_QSTR_mem_current, (const byte*)"\x16\x0b" "mem_current")
QDEF(MP_QSTR_mem_free, (const byte*)"\xcb\x08" "mem_free")
QDEF(MP_QSTR_mem_info, (const byte*)"\xd1\x08" "mem_info")
QDEF(MP_QSTR_mem_peak, (const byte*)"\x40\x08" "mem_peak")
QDEF(MP_QSTR_mem_total, (const byte*)"\xfd\x09" "mem_total")
QDEF(MP_QSTR_memoryview, (const byte*)"\x69\x0a" "memoryview")
QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x0b" "micropython")
QDEF(MP_QSTR_mode, (const byte*)"\x26\x04" "mode")
QDEF(MP_QSTR_modf, (const byte*)"\x25\x04" "modf")
QDEF(MP_QSTR_module, (const byte*)"\xbf\x06" "module")
QDEF(MP_QSTR_modules, (const byte*)"\xec\x07" "modules")
QDEF(MP_QSTR_name, (const byte*)"\xa2\x04" "name")
QDEF(MP_QSTR_namedtuple, (const byte*)"\x1e\x0a" "namedtuple")
QDEF(MP_QSTR_next, (const byte*)"\x42\x04" "next")
QDEF(MP_QSTR_nodename, (const byte*)"\x62\x08" "nodename")
QDEF(MP_QSTR_num, (const byte*)"\x73\x03" "num")
QDEF(MP_QSTR_object, (const byte*)"\x90\x06" "object")
QDEF(MP_QSTR_oct, (const byte*)"\xfd\x03" "oct")
QDEF(MP_QSTR_off, (const byte*)"\x8a\x03" "off")
QDEF(MP_QSTR_offset, (const byte*)"\x48\x06" "offset")
QDEF(MP_QSTR_on, (const byte*)"\x64\x02" "on")
QDEF(MP_QSTR_open, (const byte*)"\xd1\x04" "open")
QDEF(MP_QSTR_opt_level, (const byte*)"\x87\x09" "opt_level")
QDEF(MP_QSTR_ord, (const byte*)"\x1c\x03" "ord")
QDEF(MP_QSTR_os, (const byte*)"\x79\x02" "os")
QDEF(MP_QSTR_ov2640, (const byte*)"\x3c\x06" "ov2640")
QDEF(MP_QSTR_pack, (const byte*)"\xbc\x04" "pack")
QDEF(MP_QSTR_pack_into, (const byte*)"\x1f\x09" "pack_into")
QDEF(MP_QSTR_parity, (const byte*)"\x42\x06" "parity")
QDEF(MP_QSTR_partition, (const byte*)"\x87\x09" "partition")
QDEF(MP_QSTR_passwd, (const byte*)"\xc7\x06" "passwd")
QDEF(MP_QSTR_password, (const byte*)"\x9a\x08" "password")
QDEF(MP_QSTR_path, (const byte*)"\x88\x04" "path")
QDEF(MP_QSTR_peektime, (const byte*)"\x8b\x08" "peektime")
QDEF(MP_QSTR_pend_throw, (const byte*)"\xf3\x0a" "pend_throw")
QDEF(MP_QSTR_period, (const byte*)"\xa0\x06" "period")
QDEF(MP_QSTR_pi, (const byte*)"\x1c\x02" "pi")
QDEF(MP_QSTR_pin, (const byte*)"\xf2\x03" "pin")
QDEF(MP_QSTR_pin_num, (const byte*)"\x1b\x07" "pin_num")
QDEF(MP_QSTR_platform, (const byte*)"\x3a\x08" "platform")
QDEF(MP_QSTR_pop, (const byte*)"\x2a\x03" "pop")
QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x07" "popitem")
QDEF(MP_QSTR_popleft, (const byte*)"\x71\x07" "popleft")
QDEF(MP_QSTR_pow, (const byte*)"\x2d\x03" "pow")
QDEF(MP_QSTR_predict, (const byte*)"\x78\x07" "predict")
QDEF(MP_QSTR_print, (const byte*)"\x54\x05" "print")
QDEF(MP_QSTR_print_en, (const byte*)"\x20\x08" "print_en")
QDEF(MP_QSTR_print_exception, (const byte*)"\x1c\x0f" "print_exception")
QDEF(MP_QSTR_process_image, (const byte*)"\x96\x0d" "process_image")
QDEF(MP_QSTR_property, (const byte*)"\xc2\x08" "property")
QDEF(MP_QSTR_push, (const byte*)"\xbb\x04" "push")
QDEF(MP_QSTR_pwm, (const byte*)"\x2f\x03" "pwm")
QDEF(MP_QSTR_qstr_info, (const byte*)"\xb0\x09" "qstr_info")
QDEF(MP_QSTR_r, (const byte*)"\xd7\x01" "r")
QDEF(MP_QSTR_radians, (const byte*)"\x87\x07" "radians")
QDEF(MP_QSTR_randint, (const byte*)"\xaf\x07" "randint")
QDEF(MP_QSTR_random, (const byte*)"\xbe\x06" "random")
QDEF(MP_QSTR_randrange, (const byte*)"\xa3\x09" "randrange")
QDEF(MP_QSTR_range, (const byte*)"\x1a\x05" "range")
QDEF(MP_QSTR_rb, (const byte*)"\xd5\x02" "rb")
QDEF(MP_QSTR_re, (const byte*)"\xd2\x02" "re")
QDEF(MP_QSTR_read, (const byte*)"\xb7\x04" "read")
QDEF(MP_QSTR_readall, (const byte*)"\x76\x07" "readall")
QDEF(MP_QSTR_readinto, (const byte*)"\x4b\x08" "readinto")
QDEF(MP_QSTR_readline, (const byte*)"\xf9\x08" "readline")
QDEF(MP_QSTR_readlines, (const byte*)"\x6a\x09" "readlines")
QDEF(MP_QSTR_red, (const byte*)"\x76\x03" "red")
QDEF(MP_QSTR_release, (const byte*)"\xec\x07" "release")
QDEF(MP_QSTR_remove, (const byte*)"\x63\x06" "remove")
QDEF(MP_QSTR_rename, (const byte*)"\x35\x06" "rename")
QDEF(MP_QSTR_replace, (const byte*)"\x49\x07" "replace")
QDEF(MP_QSTR_repr, (const byte*)"\xd0\x04" "repr")
QDEF(MP_QSTR_restart, (const byte*)"\xb2\x07" "restart")
QDEF(MP_QSTR_reverse, (const byte*)"\x25\x07" "reverse")
QDEF(MP_QSTR_reversed, (const byte*)"\xa1\x08" "reversed")
QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x05" "rfind")
QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x06" "rindex")
QDEF(MP_QSTR_round, (const byte*)"\xe7\x05" "round")
QDEF(MP_QSTR_rpartition, (const byte*)"\x15\x0a" "rpartition")
QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x06" "rsplit")
QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x06" "rstrip")
QDEF(MP_QSTR_rz, (const byte*)"\xcd\x02" "rz")
QDEF(MP_QSTR_schedule, (const byte*)"\xe0\x08" "schedule")
QDEF(MP_QSTR_search, (const byte*)"\xab\x06" "search")
QDEF(MP_QSTR_seed, (const byte*)"\x92\x04" "seed")
QDEF(MP_QSTR_seek, (const byte*)"\x9d\x04" "seek")
QDEF(MP_QSTR_send, (const byte*)"\xb9\x04" "send")
QDEF(MP_QSTR_sep, (const byte*)"\x23\x03" "sep")
QDEF(MP_QSTR_set, (const byte*)"\x27\x03" "set")
QDEF(MP_QSTR_set_RGB, (const byte*)"\xef\x07" "set_RGB")
QDEF(MP_QSTR_set_RGB_num, (const byte*)"\x46\x0b" "set_RGB_num")
QDEF(MP_QSTR_set_function, (const byte*)"\xba\x0c" "set_function")
QDEF(MP_QSTR_setattr, (const byte*)"\xd4\x07" "setattr")
QDEF(MP_QSTR_setblocking, (const byte*)"\x6e\x0b" "setblocking")
QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\x0a" "setdefault")
QDEF(MP_QSTR_setter, (const byte*)"\x04\x06" "setter")
QDEF(MP_QSTR_settimeout, (const byte*)"\xdc\x0a" "settimeout")
QDEF(MP_QSTR_sin, (const byte*)"\xb1\x03" "sin")
QDEF(MP_QSTR_single, (const byte*)"\x3f\x06" "single")
QDEF(MP_QSTR_sinh, (const byte*)"\xb9\x04" "sinh")
QDEF(MP_QSTR_sizeof, (const byte*)"\x49\x06" "sizeof")
QDEF(MP_QSTR_sleep, (const byte*)"\xea\x05" "sleep")
QDEF(MP_QSTR_sleep_ms, (const byte*)"\x0b\x08" "sleep_ms")
QDEF(MP_QSTR_sleep_us, (const byte*)"\x13\x08" "sleep_us")
QDEF(MP_QSTR_slice, (const byte*)"\xb5\x05" "slice")
QDEF(MP_QSTR_socket, (const byte*)"\x60\x06" "socket")
QDEF(MP_QSTR_sort, (const byte*)"\xbf\x04" "sort")
QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x06" "sorted")
QDEF(MP_QSTR_spiflash, (const byte*)"\xff\x08" "spiflash")
QDEF(MP_QSTR_split, (const byte*)"\xb7\x05" "split")
QDEF(MP_QSTR_splitlines, (const byte*)"\x6a\x0a" "splitlines")
QDEF(MP_QSTR_sqrt, (const byte*)"\x21\x04" "sqrt")
QDEF(MP_QSTR_ssid, (const byte*)"\x08\x04" "ssid")
QDEF(MP_QSTR_st7789, (const byte*)"\x03\x06" "st7789")
QDEF(MP_QSTR_stack_use, (const byte*)"\x97\x09" "stack_use")
QDEF(MP_QSTR_start, (const byte*)"\x85\x05" "start")
QDEF(MP_QSTR_startswith, (const byte*)"\x74\x0a" "startswith")
QDEF(MP_QSTR_stat, (const byte*)"\xd7\x04" "stat")
QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\x0c" "staticmethod")
QDEF(MP_QSTR_statvfs, (const byte*)"\x14\x07" "statvfs")
QDEF(MP_QSTR_stderr, (const byte*)"\xa3\x06" "stderr")
QDEF(MP_QSTR_stdin, (const byte*)"\x21\x05" "stdin")
QDEF(MP_QSTR_stdout, (const byte*)"\x08\x06" "stdout")
QDEF(MP_QSTR_step, (const byte*)"\x57\x04" "step")
QDEF(MP_QSTR_stop, (const byte*)"\x9d\x04" "stop")
QDEF(MP_QSTR_str, (const byte*)"\x50\x03" "str")
QDEF(MP_QSTR_strip, (const byte*)"\x29\x05" "strip")
QDEF(MP_QSTR_struct, (const byte*)"\x12\x06" "struct")
QDEF(MP_QSTR_sub, (const byte*)"\x21\x03" "sub")
QDEF(MP_QSTR_sum, (const byte*)"\x2e\x03" "sum")
QDEF(MP_QSTR_super, (const byte*)"\xc4\x05" "super")
QDEF(MP_QSTR_symmetric_difference, (const byte*)"\xce\x14" "symmetric_difference")
QDEF(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\x1b" "symmetric_difference_update")
QDEF(MP_QSTR_sys, (const byte*)"\xbc\x03" "sys")
QDEF(MP_QSTR_sysname, (const byte*)"\x9b\x07" "sysname")
QDEF(MP_QSTR_tan, (const byte*)"\xfe\x03" "tan")
QDEF(MP_QSTR_tanh, (const byte*)"\xd6\x04" "tanh")
QDEF(MP_QSTR_test, (const byte*)"\x33\x04" "test")
QDEF(MP_QSTR_threshold, (const byte*)"\xf2\x09" "threshold")
QDEF(MP_QSTR_throw, (const byte*)"\xb3\x05" "throw")
QDEF(MP_QSTR_timer, (const byte*)"\x82\x05" "timer")
QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x08" "to_bytes")
QDEF(MP_QSTR_toggle, (const byte*)"\xb7\x06" "toggle")
QDEF(MP_QSTR_trunc, (const byte*)"\x5b\x05" "trunc")
QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x05" "tuple")
QDEF(MP_QSTR_type, (const byte*)"\x9d\x04" "type")
QDEF(MP_QSTR_uart, (const byte*)"\x77\x04" "uart")
QDEF(MP_QSTR_uarths, (const byte*)"\x6c\x06" "uarths")
QDEF(MP_QSTR_ubinascii, (const byte*)"\xc4\x09" "ubinascii")
QDEF(MP_QSTR_ucollections, (const byte*)"\x15\x0c" "ucollections")
QDEF(MP_QSTR_uctypes, (const byte*)"\xf8\x07" "uctypes")
QDEF(MP_QSTR_uerrno, (const byte*)"\xb4\x06" "uerrno")
QDEF(MP_QSTR_uheapq, (const byte*)"\x1d\x06" "uheapq")
QDEF(MP_QSTR_uio, (const byte*)"\xb6\x03" "uio")
QDEF(MP_QSTR_uname, (const byte*)"\xb7\x05" "uname")
QDEF(MP_QSTR_unhexlify, (const byte*)"\xb1\x09" "unhexlify")
QDEF(MP_QSTR_uniform, (const byte*)"\x01\x07" "uniform")
QDEF(MP_QSTR_union, (const byte*)"\xf6\x05" "union")
QDEF(MP_QSTR_unpack, (const byte*)"\x07\x06" "unpack")
QDEF(MP_QSTR_unpack_from, (const byte*)"\x0e\x0b" "unpack_from")
QDEF(MP_QSTR_uos, (const byte*)"\xec\x03" "uos")
QDEF(MP_QSTR_update, (const byte*)"\xb4\x06" "update")
QDEF(MP_QSTR_upper, (const byte*)"\x27\x05" "upper")
QDEF(MP_QSTR_urandom, (const byte*)"\xab\x07" "urandom")
QDEF(MP_QSTR_ure, (const byte*)"\x87\x03" "ure")
QDEF(MP_QSTR_usocket, (const byte*)"\x75\x07" "usocket")
QDEF(MP_QSTR_ustruct, (const byte*)"\x47\x07" "ustruct")
QDEF(MP_QSTR_utime, (const byte*)"\xe5\x05" "utime")
QDEF(MP_QSTR_utimeq, (const byte*)"\xf4\x06" "utimeq")
QDEF(MP_QSTR_uzlib, (const byte*)"\x6d\x05" "uzlib")
QDEF(MP_QSTR_value, (const byte*)"\x4e\x05" "value")
QDEF(MP_QSTR_values, (const byte*)"\x7d\x06" "values")
QDEF(MP_QSTR_version, (const byte*)"\xbf\x07" "version")
QDEF(MP_QSTR_version_info, (const byte*)"\x6e\x0c" "version_info")
QDEF(MP_QSTR_wb, (const byte*)"\x70\x02" "wb")
QDEF(MP_QSTR_websocket, (const byte*)"\x90\x09" "websocket")
QDEF(MP_QSTR_width, (const byte*)"\x23\x05" "width")
QDEF(MP_QSTR_write, (const byte*)"\x98\x05" "write")
QDEF(MP_QSTR_ws2812, (const byte*)"\xc8\x06" "ws2812")
QDEF(MP_QSTR_x, (const byte*)"\xdd\x01" "x")
QDEF(MP_QSTR_y, (const byte*)"\xdc\x01" "y")
QDEF(MP_QSTR_zip, (const byte*)"\xe6\x03" "zip")
QDEF(MP_QSTR_zmodem, (const byte*)"\x11\x06" "zmodem")
